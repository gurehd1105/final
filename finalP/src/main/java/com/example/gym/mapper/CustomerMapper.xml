<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.gym.mapper.CustomerMapper">

		<!-- 로그인 -->
	<select id="loginCustomer" parameterType="com.example.gym.vo.Customer"
						resultType="java.util.Map">
		SELECT
		   c.customer_no AS customerNo,
		   c.customer_id AS customerId,
		   c.customer_active AS customerActive,
		   DATE_FORMAT(c.updatedate,'20%y-%m-%d %T') AS updatedate,
		   n.paymentNo,
		   n.payment_active AS paymentActive,
		   case when n.membershipName IS not NULL 
				then n.membershipName 
				ELSE '구매내역 없음' END
				AS membershipName
		FROM customer c
		LEFT OUTER JOIN 
		(SELECT 
		      p.payment_no AS paymentNo,
		      p.customer_no AS customerNo,
		      p.membership_no AS membershipNo,
		      p.payment_date AS paymentDate,
		      p.createdate, p.updatedate,
		      m.membership_name AS membershipName,
		      case 
				when TIMESTAMPDIFF(MONTH ,  p.payment_date, NOW()) <![CDATA[ >= ]]> m.membership_month
				then '기한만료' ELSE '사용중' END  AS payment_active			<!-- 세션 내 가장 최근 결제정보 활성화 상태 저장 / '사용중' or '기한만료'  -->
		   FROM payment p
		   INNER JOIN customer c
		   ON p.customer_no = c.customer_no
		   
		   INNER JOIN membership m
		   ON p.membership_no = m.membership_no
		WHERE c.customer_id = #{customerId}
		ORDER BY createdate DESC
		LIMIT 0,1) n
		ON c.customer_no = n.customerNo
		WHERE c.customer_id = #{customerId}
		AND c.customer_pw = PASSWORD(#{customerPw})
		AND c.customer_active = 'Y'
	</select>
	
	<!-- 가입 프로세스 시작 -->
	
		<!-- ID 중복체크 -->
	<select id="checkId" parameterType="com.example.gym.vo.Customer"
							resultType="com.example.gym.vo.Customer">
		SELECT 
			customer_id AS customerId,
			customer_active AS customerActive
		FROM customer
		WHERE customer_id = #{customerId}
		AND customer_active = 'Y'
	</select>
	
		<!-- customer Insert -->
	<insert id="insertCustomer" parameterType="com.example.gym.vo.Customer">
			<selectKey order="AFTER" resultType="Integer" keyProperty="customerNo">SELECT last_insert_id()</selectKey>
		INSERT INTO customer (
			customer_id,
			customer_pw
		) VALUES (
			#{customerId},
			PASSWORD(#{customerPw})
		)	
	</insert>
		<!-- customerDetail Insert -->
	<insert id="insertCustomerDetail" parameterType="com.example.gym.vo.CustomerDetail">
		INSERT INTO customer_detail (
			customer_no,
			customer_name,
			customer_gender,
			customer_height,
			customer_weight,
			customer_phone,
			customer_address,
			customer_email
		) VALUES (
			#{customerNo},
			#{customerName},
			#{customerGender},
			#{customerHeight},
			#{customerWeight},
			#{customerPhone},
			#{customerAddress},
			#{customerEmail}
		)			
	</insert>	
	
		<!-- customerImg Insert -->	
	<insert id="insertCustomerImg" parameterType="com.example.gym.vo.CustomerImg">
		INSERT INTO customer_img (
			customer_no,
			customer_img_origin_name			
		) VALUES (
			#{customerNo},
			#{customerImgOriginName}
		)			
	</insert>
	<!-- 가입 프로세스 종료 -->
	
	<!-- 탈퇴 프로세스 시작 -->
	
	<update id="updateCustomerActive" parameterType="com.example.gym.vo.Customer">
		UPDATE customer SET
			customer_active = 'N',
			updatedate = NOW()
		WHERE customer_no = #{customerNo}
	</update>
	
	<delete id="deleteCustomerImg" parameterType="com.example.gym.vo.Customer">
		DELETE FROM customer_img
		WHERE customer_no = #{customerNo}
	</delete>
	
	<delete id="deleteCustomerDetail" parameterType="com.example.gym.vo.Customer">
		DELETE FROM customer_detail
		WHERE customer_no = #{customerNo}
	</delete>	
	<!-- 탈퇴 프로세스 종료 -->
	
	<!-- 상세정보/이미지 -> 마이페이지  -->
	<select id="customerOne" parameterType="Integer"
										resultType="java.util.Map">
		SELECT
			c.customer_no AS customerNo,
			c.customer_id AS customerId,
			c.customer_active AS customerActive,
			DATE_FORMAT(c.createdate,'20%y-%m-%d %T') AS cCreatedate,
			DATE_FORMAT(c.updatedate,'20%y-%m-%d %T') AS cUpdatedate,
			
			cd.customer_name AS customerName,
			cd.customer_gender AS customerGender,
			cd.customer_height AS customerHeight,
			cd.customer_weight AS customerWeight,
			cd.customer_phone AS customerPhone,
			cd.customer_address AS customerAddress,
			cd.customer_email AS customerEmail,		
			DATE_FORMAT(cd.createdate,'20%y-%m-%d %T') AS cdCreatedate,	
			DATE_FORMAT(cd.updatedate,'20%y-%m-%d %T') AS cdUpdatedate,
			
			ci.customer_img_no AS customerImgNo,
			ci.customer_img_origin_name AS customerImgOriginName,
			ci.createdate AS ciCreatedate, 
			ci.updatedate AS ciUpdatedate
		FROM customer c 
		LEFT OUTER JOIN customer_detail cd
		ON c.customer_no = cd.customer_no
		LEFT OUTER JOIN customer_img ci
		ON c.customer_no = ci.customer_no
		
		WHERE c.customer_no = #{customerNo}
	</select>
	
	<!-- 수정 프로세스 시작 -->
		<!-- 상세정보 변경 -->
	<update id="updateCustomerOne" parameterType="com.example.gym.vo.CustomerDetail">
		UPDATE customer_detail SET
			customer_name = #{customerName},
			customer_gender = #{customerGender},
			customer_height = #{customerHeight},
			customer_weight = #{customerWeight},
			customer_phone = #{customerPhone},
			customer_address = #{customerAddress},
			customer_email = #{customerEmail},
			updatedate = NOW()
		WHERE customer_no = #{customerNo}
	</update>
		<!-- 이미지 변경 -->
	<update id="updateCustomerImg" parameterType="com.example.gym.vo.CustomerImg">		
		UPDATE customer_img SET
			customer_img_origin_name = #{customerImgOriginName},
			updatedate = NOW()
		WHERE customer_no = #{customerNo}		
		
	</update>
		<!-- Img 변경 위한 정보조회 -->
	<select id="checkCustomerImg" parameterType="com.example.gym.vo.Customer"
									resultType="com.example.gym.vo.CustomerImg">
		SELECT
			customer_img_no AS customerImgNo,
			customer_no AS customerNo,
			customer_img_origin_name AS customerImgOriginName,
			customer_img_file_name AS customerImgFileName,
			customer_img_size AS customerImgSize,
			customer_img_type AS customerImgType,
			createdate, updatedate
		FROM customer_img
			WHERE customer_no = #{customerNo}
	</select>
		<!-- 비밀번호 변경 -->
	<update id="updateCustomerPw" parameterType="com.example.gym.vo.Customer">
		UPDATE customer SET
			customer_pw = PASSWORD(#{customerPw}),
			updatedate = now()
		WHERE customer_no = #{customerNo}
	</update>
	<!-- 수정 프로세스 종료 -->
	
	<select id="selectAllCustomer" resultType="java.util.Map">
		SELECT
			c.customer_no AS customerNo,
			c.customer_id AS customerId,
			c.customer_active AS customerActive,
			
			DATE_FORMAT(c.createdate, '20%y-%m-%d %T') AS createdate, 
			DATE_FORMAT(c.updatedate, '20%y-%m-%d %T') AS updatedate,
			
			cd.customer_name AS customerName,
			cd.customer_gender AS customerGender,
			cd.customer_height AS customerHeight,
			cd.customer_weight AS customerWeight,
			cd.customer_phone AS customerPhone,
			cd.customer_address AS customerAddress,
			cd.customer_email AS customerEmail,
			p.payment_no AS paymentNo
			
		FROM customer c 
		INNER JOIN customer_detail cd
		ON c.customer_no = cd.customer_no LEFT JOIN payment p
		ON c.customer_no = p.customer_no
		
	</select>
	
    <select id="selectAllCustomerImage" resultType="String">
        SELECT img.customer_img_origin_name
        FROM customer_img img
            INNER JOIN customer ON img.customer_no = customer.customer_no
        WHERE customer.customer_active = 'Y'
            AND img.customer_img_origin_name IS NOT NULL
    </select>
</mapper>