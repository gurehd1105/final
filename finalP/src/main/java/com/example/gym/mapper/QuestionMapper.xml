<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.gym.mapper.QuestionMapper"> <!-- question / question_reply 모두진행 -->

	
		<!-- question 시작 -->	
	<select id="selectQuestionList" parameterType="com.example.gym.vo.Page"
									resultType="java.util.Map">
		SELECT 
			q.question_no AS questionNo,	
			q.question_title AS questionTitle,
			c.customer_id AS customerId,
			DATE_FORMAT(q.createdate,'20%y-%m-%d %T') AS createdate, 
			DATE_FORMAT(q.updatedate,'20%y-%m-%d %T') AS updatedate
		FROM question q
		INNER JOIN customer c
		ON q.customer_no = c.customer_no
		ORDER BY q.updatedate DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
		<!-- 페이징 기능위한 전체 Question Counting -->
	<select id="selectCountOfQuestion" resultType="Integer">
		SELECT
			COUNT(*)
		FROM question
	</select>
	
	<insert id="insertQuestion" parameterType="com.example.gym.vo.Question">
		INSERT INTO question (
			customer_no,
			question_title,
			question_content
		) VALUES (
			#{customerNo},
			#{questionTitle},
			#{questionContent}
		)
	</insert>	 
	
	<select id="selectQuestionOne" parameterType="com.example.gym.vo.Question"
										resultType="java.util.Map">
		SELECT 
			q.question_no AS questionNo,
			q.customer_no AS customerNo,
			q.question_title AS questionTitle,
			q.question_content AS questionContent,
			DATE_FORMAT(q.createdate,'20%y-%m-%d %T') AS createdate,
			DATE_FORMAT(q.updatedate,'20%y-%m-%d %T') AS updatedate,
				
			c.customer_no AS customerNo,		
			c.customer_id AS customerId
			
		FROM question q
		INNER JOIN customer c
		ON q.customer_no = c.customer_no
			WHERE question_no = #{questionNo}
	</select>
	
	 <!-- 문의 답변글 없을 시에만 수정가능 -->
	<update id="updateQuestion" parameterType="com.example.gym.vo.Question">
		UPDATE question SET
			question_title = #{questionTitle},
			question_content = #{questionContent},
			updatedate = NOW()
		WHERE question_no = #{questionNo}	
	</update> 
	
	<delete id="deleteQuestion" parameterType="com.example.gym.vo.Question">
		DELETE FROM question 
			WHERE question_no = #{questionNo}
	</delete>	
    
	<select id="countNotYet" resultType="Integer">
		SELECT COUNT(1)
        FROM 
            question AS q
            LEFT OUTER JOIN (
                SELECT question_no, COUNT(1) AS 'cnt'
                FROM question_reply 
                GROUP BY question_no
            ) AS repl
                ON q.question_no = repl.question_no
        WHERE repl.cnt IS NULL

	</select>
		<!-- question  종료 -->
	
	
	
	
	
		<!-- question_reply 시작 -->
	<insert id="insertQuestionReply" parameterType="com.example.gym.vo.QuestionReply">
		INSERT INTO question_reply (
			question_no,
			employee_no,
			question_reply_content
		) VALUES (
			#{questionNo},
			#{employeeNo},
			#{questionReplyContent}
		)		
	</insert>
	
	<select id="selectQuestionReply" parameterType="com.example.gym.vo.Question"
										resultType="java.util.Map">
		SELECT
			qr.question_reply_no AS questionReplyNo,
			qr.question_no AS questionNo,
			qr.employee_no AS employeeNo,
			qr.question_reply_content AS questionReplyContent,
			DATE_FORMAT(qr.createdate,'20%y-%m-%d %T') AS createdate,
			DATE_FORMAT(qr.updatedate,'20%y-%m-%d %T') AS updatedate,
			
			e.employee_id AS employeeId
			
		FROM question_reply qr
		INNER JOIN employee e
		ON qr.employee_no = e.employee_no
			WHERE question_no = #{questionNo}
			
	</select>
	
	<update id="updateQuestionReply" parameterType="com.example.gym.vo.QuestionReply">
		UPDATE question_reply SET
			employee_no = #{employeeNo},
			question_reply_content = #{questionReplyContent},
			updatedate = NOW()
		WHERE question_reply_no = #{questionReplyNo}
	</update>
	
	<delete id="deleteQuestionReply" parameterType="com.example.gym.vo.QuestionReply">
		DELETE FROM question_reply
			WHERE question_no = #{questionNo}
	</delete>
		
		<!-- question_reply 종료 -->
	
</mapper>